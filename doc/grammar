(* comments *)
#[^\n]+\n

(* keywords *)
type
namespace
variant

(* symbols *)
[{}();:,=\.]

(* strings *)
"(\\.|[^\\"])*"

(* numbers *)
-?(0[xX][0-9a-fA-F]+|0[oO][0-7]+|0[bB][01]+|[0-9]+)

(* identifier *)
[a-zA-Z_][0-9a-zA-Z_]*

(* whitespace *)
[ \t\n\f]+

(* grammar *)
name         = identifier '.' name
             | identifier;

value        = number
             | string;

typeargs     = value typeargs
             | typespec typeargs
             |;

typespec     = '(' typespec ')'
             | '{' body '}'
             | name typeargs;

variantdef   = 'variant' identifier '{' body '}'
             | 'variant' identifier
             | 'variant' '{' body '}'
             | 'variant';

namespacedef = 'namespace' identifier '{' body '}'
             | 'namespace' identifier;

typedef      = 'type' identifier '{' body '}'
             | 'type' identifier ':' typespec
             | 'type' identifier;

names        = name ',' names
             | name;

constraint   = name '=' value;

body         = typedef ';' body
             | namespacedef ';' body
             | variantdef ';' body
             | names ':' typespec ';' body
             | constraint ';' body
             |;

